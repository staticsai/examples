import { StaticsCore } from "../core.js";
import { RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import { ConnectionError, InvalidRequestError, RequestAbortedError, RequestTimeoutError, UnexpectedClientError } from "../models/errors/httpclienterrors.js";
import * as errors from "../models/errors/index.js";
import { SDKError } from "../models/errors/sdkerror.js";
import { SDKValidationError } from "../models/errors/sdkvalidationerror.js";
import { Result } from "../types/fp.js";
/**
 * Create a new link
 *
 * @remarks
 * Start linking a new end user account for agent interaction. This operation will return a link, which you can pass to your frontend to present linking iFrame (or React component) logic.
 */
export declare function linkCreateLink(client: StaticsCore, request: components.CreateLinkDto, options?: RequestOptions): Promise<Result<components.LinkDto, errors.CreateLinkResponseBody | errors.CreateLinkLinkResponseBody | SDKError | SDKValidationError | UnexpectedClientError | InvalidRequestError | RequestAbortedError | RequestTimeoutError | ConnectionError>>;
//# sourceMappingURL=linkCreateLink.d.ts.map