import * as z from "zod";
/**
 * Account not found
 */
export type GetAccountResponseBodyData = {
    statusCode: number;
    message: string;
    error?: string | undefined;
};
/**
 * Account not found
 */
export declare class GetAccountResponseBody extends Error {
    statusCode: number;
    error?: string | undefined;
    /** The original data that was passed to this error instance. */
    data$: GetAccountResponseBodyData;
    constructor(err: GetAccountResponseBodyData);
}
/** @internal */
export declare const GetAccountResponseBody$inboundSchema: z.ZodType<GetAccountResponseBody, z.ZodTypeDef, unknown>;
/** @internal */
export type GetAccountResponseBody$Outbound = {
    statusCode: number;
    message: string;
    error?: string | undefined;
};
/** @internal */
export declare const GetAccountResponseBody$outboundSchema: z.ZodType<GetAccountResponseBody$Outbound, z.ZodTypeDef, GetAccountResponseBody>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace GetAccountResponseBody$ {
    /** @deprecated use `GetAccountResponseBody$inboundSchema` instead. */
    const inboundSchema: z.ZodType<GetAccountResponseBody, z.ZodTypeDef, unknown>;
    /** @deprecated use `GetAccountResponseBody$outboundSchema` instead. */
    const outboundSchema: z.ZodType<GetAccountResponseBody$Outbound, z.ZodTypeDef, GetAccountResponseBody>;
    /** @deprecated use `GetAccountResponseBody$Outbound` instead. */
    type Outbound = GetAccountResponseBody$Outbound;
}
//# sourceMappingURL=getaccount.d.ts.map