import * as z from "zod";
export type ProxyDto = {
    /**
     * Associated account ID for this proxy
     */
    accountId: string;
    /**
     * Proxy hostname (FQDN) that your client should connect to. Do not cache this value; it should be requested every time you connect to the proxy.
     */
    host: string;
    /**
     * Proxy port that your client should connect to. Do not cache this value; it should be requested every time you connect to the proxy.
     */
    port: number;
    /**
     * Username for connection to the proxy, typically in the same format as a link ID.
     */
    username: string;
    /**
     * Password for connection to the proxy. Do not cache this value - this value may change from time to time.
     */
    password: string;
    /**
     * Connection string to use to connect to the proxy
     */
    connectionString: string;
};
/** @internal */
export declare const ProxyDto$inboundSchema: z.ZodType<ProxyDto, z.ZodTypeDef, unknown>;
/** @internal */
export type ProxyDto$Outbound = {
    accountId: string;
    host: string;
    port: number;
    username: string;
    password: string;
    connectionString: string;
};
/** @internal */
export declare const ProxyDto$outboundSchema: z.ZodType<ProxyDto$Outbound, z.ZodTypeDef, ProxyDto>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace ProxyDto$ {
    /** @deprecated use `ProxyDto$inboundSchema` instead. */
    const inboundSchema: z.ZodType<ProxyDto, z.ZodTypeDef, unknown>;
    /** @deprecated use `ProxyDto$outboundSchema` instead. */
    const outboundSchema: z.ZodType<ProxyDto$Outbound, z.ZodTypeDef, ProxyDto>;
    /** @deprecated use `ProxyDto$Outbound` instead. */
    type Outbound = ProxyDto$Outbound;
}
//# sourceMappingURL=proxydto.d.ts.map