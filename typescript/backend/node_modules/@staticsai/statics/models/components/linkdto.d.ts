import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";
/**
 * The current status of the link
 */
export declare const Status: {
    readonly Uninitialized: "UNINITIALIZED";
    readonly Connecting: "CONNECTING";
    readonly Ready: "READY";
    readonly Closed: "CLOSED";
};
/**
 * The current status of the link
 */
export type Status = ClosedEnum<typeof Status>;
export type LinkDto = {
    /**
     * Unique immutable identifier of the link
     */
    id: string;
    /**
     * The current status of the link
     */
    status: Status;
    /**
     * The link token for frontend to start authentication flow
     */
    linkToken: string;
    /**
     * Unique immutable identifier of the account
     */
    accountId?: string | undefined;
};
/** @internal */
export declare const Status$inboundSchema: z.ZodNativeEnum<typeof Status>;
/** @internal */
export declare const Status$outboundSchema: z.ZodNativeEnum<typeof Status>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace Status$ {
    /** @deprecated use `Status$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly Uninitialized: "UNINITIALIZED";
        readonly Connecting: "CONNECTING";
        readonly Ready: "READY";
        readonly Closed: "CLOSED";
    }>;
    /** @deprecated use `Status$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly Uninitialized: "UNINITIALIZED";
        readonly Connecting: "CONNECTING";
        readonly Ready: "READY";
        readonly Closed: "CLOSED";
    }>;
}
/** @internal */
export declare const LinkDto$inboundSchema: z.ZodType<LinkDto, z.ZodTypeDef, unknown>;
/** @internal */
export type LinkDto$Outbound = {
    id: string;
    status: string;
    linkToken: string;
    accountId?: string | undefined;
};
/** @internal */
export declare const LinkDto$outboundSchema: z.ZodType<LinkDto$Outbound, z.ZodTypeDef, LinkDto>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace LinkDto$ {
    /** @deprecated use `LinkDto$inboundSchema` instead. */
    const inboundSchema: z.ZodType<LinkDto, z.ZodTypeDef, unknown>;
    /** @deprecated use `LinkDto$outboundSchema` instead. */
    const outboundSchema: z.ZodType<LinkDto$Outbound, z.ZodTypeDef, LinkDto>;
    /** @deprecated use `LinkDto$Outbound` instead. */
    type Outbound = LinkDto$Outbound;
}
//# sourceMappingURL=linkdto.d.ts.map