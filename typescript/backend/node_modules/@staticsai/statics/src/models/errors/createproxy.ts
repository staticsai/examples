/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

/**
 * The account either does not exist or is not in your tenant
 */
export type CreateProxyProxyResponseBodyData = {
  statusCode: number;
  message: string;
  error?: string | undefined;
};

/**
 * The account either does not exist or is not in your tenant
 */
export class CreateProxyProxyResponseBody extends Error {
  statusCode: number;
  error?: string | undefined;

  /** The original data that was passed to this error instance. */
  data$: CreateProxyProxyResponseBodyData;

  constructor(err: CreateProxyProxyResponseBodyData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.statusCode = err.statusCode;
    if (err.error != null) this.error = err.error;

    this.name = "CreateProxyProxyResponseBody";
  }
}

/**
 * The account is not in a valid state for proxy
 */
export type CreateProxyResponseBodyData = {
  statusCode: number;
  message: string;
  error?: string | undefined;
};

/**
 * The account is not in a valid state for proxy
 */
export class CreateProxyResponseBody extends Error {
  statusCode: number;
  error?: string | undefined;

  /** The original data that was passed to this error instance. */
  data$: CreateProxyResponseBodyData;

  constructor(err: CreateProxyResponseBodyData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.statusCode = err.statusCode;
    if (err.error != null) this.error = err.error;

    this.name = "CreateProxyResponseBody";
  }
}

/** @internal */
export const CreateProxyProxyResponseBody$inboundSchema: z.ZodType<
  CreateProxyProxyResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  statusCode: z.number(),
  message: z.string(),
  error: z.string().optional(),
})
  .transform((v) => {
    return new CreateProxyProxyResponseBody(v);
  });

/** @internal */
export type CreateProxyProxyResponseBody$Outbound = {
  statusCode: number;
  message: string;
  error?: string | undefined;
};

/** @internal */
export const CreateProxyProxyResponseBody$outboundSchema: z.ZodType<
  CreateProxyProxyResponseBody$Outbound,
  z.ZodTypeDef,
  CreateProxyProxyResponseBody
> = z.instanceof(CreateProxyProxyResponseBody)
  .transform(v => v.data$)
  .pipe(z.object({
    statusCode: z.number(),
    message: z.string(),
    error: z.string().optional(),
  }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateProxyProxyResponseBody$ {
  /** @deprecated use `CreateProxyProxyResponseBody$inboundSchema` instead. */
  export const inboundSchema = CreateProxyProxyResponseBody$inboundSchema;
  /** @deprecated use `CreateProxyProxyResponseBody$outboundSchema` instead. */
  export const outboundSchema = CreateProxyProxyResponseBody$outboundSchema;
  /** @deprecated use `CreateProxyProxyResponseBody$Outbound` instead. */
  export type Outbound = CreateProxyProxyResponseBody$Outbound;
}

/** @internal */
export const CreateProxyResponseBody$inboundSchema: z.ZodType<
  CreateProxyResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  statusCode: z.number(),
  message: z.string(),
  error: z.string().optional(),
})
  .transform((v) => {
    return new CreateProxyResponseBody(v);
  });

/** @internal */
export type CreateProxyResponseBody$Outbound = {
  statusCode: number;
  message: string;
  error?: string | undefined;
};

/** @internal */
export const CreateProxyResponseBody$outboundSchema: z.ZodType<
  CreateProxyResponseBody$Outbound,
  z.ZodTypeDef,
  CreateProxyResponseBody
> = z.instanceof(CreateProxyResponseBody)
  .transform(v => v.data$)
  .pipe(z.object({
    statusCode: z.number(),
    message: z.string(),
    error: z.string().optional(),
  }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateProxyResponseBody$ {
  /** @deprecated use `CreateProxyResponseBody$inboundSchema` instead. */
  export const inboundSchema = CreateProxyResponseBody$inboundSchema;
  /** @deprecated use `CreateProxyResponseBody$outboundSchema` instead. */
  export const outboundSchema = CreateProxyResponseBody$outboundSchema;
  /** @deprecated use `CreateProxyResponseBody$Outbound` instead. */
  export type Outbound = CreateProxyResponseBody$Outbound;
}
