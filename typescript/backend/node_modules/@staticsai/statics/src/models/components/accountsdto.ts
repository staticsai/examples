/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import {
  AccountDto,
  AccountDto$inboundSchema,
  AccountDto$Outbound,
  AccountDto$outboundSchema,
} from "./accountdto.js";

export type AccountsDto = {
  /**
   * List of accounts
   */
  accounts: Array<AccountDto>;
};

/** @internal */
export const AccountsDto$inboundSchema: z.ZodType<
  AccountsDto,
  z.ZodTypeDef,
  unknown
> = z.object({
  accounts: z.array(AccountDto$inboundSchema),
});

/** @internal */
export type AccountsDto$Outbound = {
  accounts: Array<AccountDto$Outbound>;
};

/** @internal */
export const AccountsDto$outboundSchema: z.ZodType<
  AccountsDto$Outbound,
  z.ZodTypeDef,
  AccountsDto
> = z.object({
  accounts: z.array(AccountDto$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AccountsDto$ {
  /** @deprecated use `AccountsDto$inboundSchema` instead. */
  export const inboundSchema = AccountsDto$inboundSchema;
  /** @deprecated use `AccountsDto$outboundSchema` instead. */
  export const outboundSchema = AccountsDto$outboundSchema;
  /** @deprecated use `AccountsDto$Outbound` instead. */
  export type Outbound = AccountsDto$Outbound;
}
