/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

export type ProxyDto = {
  /**
   * Associated account ID for this proxy
   */
  accountId: string;
  /**
   * Proxy hostname (FQDN) that your client should connect to. Do not cache this value; it should be requested every time you connect to the proxy.
   */
  host: string;
  /**
   * Proxy port that your client should connect to. Do not cache this value; it should be requested every time you connect to the proxy.
   */
  port: number;
  /**
   * Username for connection to the proxy, typically in the same format as a link ID.
   */
  username: string;
  /**
   * Password for connection to the proxy. Do not cache this value - this value may change from time to time.
   */
  password: string;
  /**
   * Connection string to use to connect to the proxy
   */
  connectionString: string;
};

/** @internal */
export const ProxyDto$inboundSchema: z.ZodType<
  ProxyDto,
  z.ZodTypeDef,
  unknown
> = z.object({
  accountId: z.string(),
  host: z.string(),
  port: z.number(),
  username: z.string(),
  password: z.string(),
  connectionString: z.string(),
});

/** @internal */
export type ProxyDto$Outbound = {
  accountId: string;
  host: string;
  port: number;
  username: string;
  password: string;
  connectionString: string;
};

/** @internal */
export const ProxyDto$outboundSchema: z.ZodType<
  ProxyDto$Outbound,
  z.ZodTypeDef,
  ProxyDto
> = z.object({
  accountId: z.string(),
  host: z.string(),
  port: z.number(),
  username: z.string(),
  password: z.string(),
  connectionString: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ProxyDto$ {
  /** @deprecated use `ProxyDto$inboundSchema` instead. */
  export const inboundSchema = ProxyDto$inboundSchema;
  /** @deprecated use `ProxyDto$outboundSchema` instead. */
  export const outboundSchema = ProxyDto$outboundSchema;
  /** @deprecated use `ProxyDto$Outbound` instead. */
  export type Outbound = ProxyDto$Outbound;
}
