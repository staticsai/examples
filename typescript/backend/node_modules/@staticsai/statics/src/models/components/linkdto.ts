/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";

/**
 * The current status of the link
 */
export const Status = {
  Uninitialized: "UNINITIALIZED",
  Connecting: "CONNECTING",
  Ready: "READY",
  Closed: "CLOSED",
} as const;
/**
 * The current status of the link
 */
export type Status = ClosedEnum<typeof Status>;

export type LinkDto = {
  /**
   * Unique immutable identifier of the link
   */
  id: string;
  /**
   * The current status of the link
   */
  status: Status;
  /**
   * The link token for frontend to start authentication flow
   */
  linkToken: string;
  /**
   * Unique immutable identifier of the account
   */
  accountId?: string | undefined;
};

/** @internal */
export const Status$inboundSchema: z.ZodNativeEnum<typeof Status> = z
  .nativeEnum(Status);

/** @internal */
export const Status$outboundSchema: z.ZodNativeEnum<typeof Status> =
  Status$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Status$ {
  /** @deprecated use `Status$inboundSchema` instead. */
  export const inboundSchema = Status$inboundSchema;
  /** @deprecated use `Status$outboundSchema` instead. */
  export const outboundSchema = Status$outboundSchema;
}

/** @internal */
export const LinkDto$inboundSchema: z.ZodType<LinkDto, z.ZodTypeDef, unknown> =
  z.object({
    id: z.string(),
    status: Status$inboundSchema,
    linkToken: z.string(),
    accountId: z.string().optional(),
  });

/** @internal */
export type LinkDto$Outbound = {
  id: string;
  status: string;
  linkToken: string;
  accountId?: string | undefined;
};

/** @internal */
export const LinkDto$outboundSchema: z.ZodType<
  LinkDto$Outbound,
  z.ZodTypeDef,
  LinkDto
> = z.object({
  id: z.string(),
  status: Status$outboundSchema,
  linkToken: z.string(),
  accountId: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace LinkDto$ {
  /** @deprecated use `LinkDto$inboundSchema` instead. */
  export const inboundSchema = LinkDto$inboundSchema;
  /** @deprecated use `LinkDto$outboundSchema` instead. */
  export const outboundSchema = LinkDto$outboundSchema;
  /** @deprecated use `LinkDto$Outbound` instead. */
  export type Outbound = LinkDto$Outbound;
}
